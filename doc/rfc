.\" 11/10/08 Template updated to align with Copyright Notice as
.\" defined in RFC 5378 (BCP 78).
.pl 10.0i
.po 0
.ll 7.2i
.lt 7.2i
.nr LL 7.2i
.nr LT 7.2i
.ds RF FORMFEED[Page %]
.ds LH Internet Draft
.\"   --> Header/footers: Set short title, author(s), and dates:
.ds CH IRC Class Project                 \" <Short title>
.ds LF Barber, Emma                      \" <Authors>
.ds RH May 4, 2017                       \" <Submission date>
.ds CF Expires June 2017                 \" <Expiration date>
.hy 0
.ad l
.nf
.\" 5678901234567 check 72 column width 12345678901234567890123456789012
Internet Draft                                               Emma Barber
CS494                                          Portland State University
Category: Informational                                   April 25, 2017
Expires: June 2017

.ce
IRC Project
.ce
draft-irc-pdx-cs494-00.txt

.in 3              \"  Basic indent for text is 3 spaces
.ti 0              \"  "Temporary indent" for next line: 0 spaces
Status of this Memo

Distribution of this memo is unlimited.

This Internet-Draft is submitted to IETF pursuant to, and in full
conformance with, the provisions of BCP 78 and BCP 79.

Internet-Drafts are working documents of the Internet Engineering
Task Force (IETF), its areas, and its working groups.  Note that
other groups may also distribute working documents as Internet-
Drafts.

Internet-Drafts are draft documents valid for a maximum of six months
and may be updated, replaced, or obsoleted by other documents at any
time.  It is inappropriate to use Internet-Drafts as reference
material or to cite them other than as "work in progress."

The list of current Internet-Drafts can be accessed at
http://www.ietf.org/ietf/1id-abstracts.txt.

The list of Internet-Draft Shadow Directories can be accessed at
http://www.ietf.org/shadow.html.

This Internet-Draft will expire on June 30, 2017.

.ti 0
Copyright Notice

Copyright (c) YYYY IETF Trust and the persons identified as
the document authors.  All rights reserved.   

This document is subject to BCP 78 and the IETF Trust's Legal
Provisions Relating to IETF Documents
(http://trustee.ietf.org/license-info) in effect on the date of
publication of this document.  Please review these documents
carefully, as they describe your rights and restrictions with respect
to this document.
 
.ti 0
Abstract          \"  See: "Instructions to RFC Authors [RFC2223BIS]"

This file describes the protocol for an IRC client/server system for
the networking protocols class at Portland State University.

.in 0
Table of Contents

.nf
   1. Introduction ....................................................3
   2. Basic Information ...............................................3
   3. Client Messages .................................................3
      3.1. Nick message ...............................................3
      3.2. Join message ...............................................3
      3.3. Leave message ..............................................3
      3.4. List message ...............................................4
      3.5. Names message ..............................................4
      3.6. Privmsg message ............................................4
      3.7. Quit message ...............................................4
      3.8. Keepalive message ..........................................4
   4. Security Considerations .........................................4
   5. IANA Considerations .............................................4
   6. References ......................................................5

.bp
.in 3 
.ti 0
1. Introduction

This document is a specification for a simple Internet Relay Chat
(IRC) protocol. It uses a single central server via which users may
join chat rooms and send messages to each other.

.ti 0
2. Basic Information
.\"     The RFC Editor puts .ti 0 before each section and subsection title.

Communication using this protocol is done over TCP, with a default
server port of 6667. All communication between client and server will
be done over a persistent connection.

Messages consist of a one word command, followed by optional parameters,
and ended with a newline character.

All room names must start with a pound sign (#), client nicknames may not
use this character.

.ti 0
3. Client Messages

.ti 0
3.1. Nick message

   Command: NICK
Parameters: <nickname>

At the beginning of a client connection, the client should send a
NICK message with the user's desired nickname. If the nick is already
in use, the server should respond with ERROR NICK.

.ti 0
3.2. Join message

   Command: JOIN
Parameters: <room>{,<room>}

The JOIN command is used to join a room or list of rooms. If the rooms do
not already exist, the server will create them. On success, the server
should respond to the original client with the original command, and to
each connected client in each room with <nickname> JOIN <room>. If the
room name is invalid, the server should instead respond with ERROR ROOM.

.ti 0
3.3. Leave message

   Command: PART
Parameters: <room>{,<room>}

The PART command is used to leave a room or list of rooms. The server
must respond with PART followed by the rooms successfully left, and to
other clients in each room with <nickname> PART <room>.

.ti 0
3.4. List message

   Command: LIST

The LIST command is used to display all channels on the server. The server
should respond with LIST followed by a comma separated list of room names.

.ti 0
3.5. Names message

   Command: NAMES
Parameters: <room>

The NAMES command displays all nicknames in a given room. The server
should respond with NAMES followed by the room name and a comma separated
list of names.

.ti 0
3.6. Privmsg message

   Command: PRIVMSG
Parameters: <receiver>{,<receiver>} <text to be sent>

The PRIVMSG command is used to send a message to a list of rooms or clients.
The server should send <sender> PRIVMSG <text to be sent> to each appropriate
client or room.

.ti 0
3.7. Quit message

   Command: QUIT

The QUIT command is used to disconnect from the server. The server should
immediately close the connection.

.ti 0
3.8. Keepalive message

   Command: PING
   Command: PONG

The PING command is used to determine if the connection has been lost. PING
messages should be sent from the server periodically, and the recipient
(server or client) must respond with a PONG within a set amount of time or
the other party should close the connection.

.ti 0
4.  Security Considerations

All messages are sent in plaintext. Any encryption must be performed by the
user of the client.

.ti 0
5.  IANA Considerations

No actions are required from IANA as result of the publication of
this document.

.in 0
.nf

.ne 10                                \" Keep the next 10 lines together
.fi
.in 3                                 \" Restore normal indent
.ti 0
6.  References

.ti 0
6.1.  Normative References

.in 14
.ti 3
[RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
Requirement Levels", BCP 14, RFC 2119, March 1997.
.\" If you used the keywords, please include RFC 2119 as a normative 
.\" reference.

.ti 3
[RFC4234]  Crocker, D. and P. Overell, "Augmented BNF for Syntax
Specifications: ABNF", RFC 4234, October 2005.
.\" This is just an example. The reference entries for all RFCs,
.\" formatted in the style of the RFC Editor are available here:
.\" ftp://ftp.rfc-editor.org/in-notes/rfc-ref.txt

.ti 0
6.2.  Informative References

.ti 3
[RFC1459]  Oikarnen, J. and P Reed, "Internet Relay Chat Protocol",
RFC 1459, May 1993.

.in 3
.ti 0
Authors' Addresses

.\"  The RFC Editor has always treated the Authors' Addresses section
.\"  of an RFC as essentially boilerplate: it is required to be
.\"  the last section before the legal boilerplate and is normally
.\"  unnumbered.
.nf
Emma Barber
Portland State University
1825 SW Broadway, Portland, OR 97201

Email: embarber@pdx.edu
